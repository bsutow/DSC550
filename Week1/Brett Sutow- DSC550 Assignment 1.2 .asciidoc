+*In[2]:*+
[source, ipython3]
----
import numpy as np 

----


+*In[3]:*+
[source, ipython3]
----
#Practice attempt#
np.random.rand(4,2)
----


+*Out[3]:*+
----array([[0.61383548, 0.9731114 ],
       [0.86072167, 0.1660495 ],
       [0.5877461 , 0.36417617],
       [0.46028897, 0.52011088]])----


+*In[4]:*+
[source, ipython3]
----
#Practice attempt creating 4 by 3#
np.random.randint(0,501, size = (4,3))
----


+*Out[4]:*+
----array([[125, 404, 254],
       [322, 243, 412],
       [227,  26, 490],
       [467, 378,  59]])----


+*In[46]:*+
[source, ipython3]
----
#Creates randomly generate array sized 10x50 with 1 to 500#
x= np.random.randint(1,501, size = (10,50))
print(x)
----


+*Out[46]:*+
----
[[308 320 324  54 360 483 366 235 477 326 183  86 240 275 483 126 255 231
  415 318 426 301 468 165   8  41 467   3 251   2 260  36 161 453 360  58
  424 383 301 282 146 242 236  15 296 342 271 223 253 462]
 [118 396 318 353 260 133 400  45 118 250  76 359 396 183 190 355 386  80
  482 410 358 491  18 462 350 231 116 257 434 301 257  90 403 415 445 167
   77 483 248 325 319 114  38  17 426 248  35 140 331 105]
 [ 96 409  82 439 122  51 393 222 253  57  83 229 475  69 327 328 190 216
    1 314 446 368  78 332 446 392 365 395  56 272  88 336 167 351 446 144
   93 448 136 319 173 386 497 233 421 122 186 206  65 261]
 [151 194 456  70 226 344 492  60 466 480  60 159  20 303 254 436 306  84
  179 366 221 413  34 262 297 108 376 279 440 498 285 387 202  17 483 323
  458 109 450 186  82 363 300 393 308 268 343 175 146 317]
 [365 498  55 495 454 131  95  44 340 227 424 496 161  12 373 101 384 478
  103 237 450 114 346 300 449   8 284  12  87 113 177 200 113  41  16 362
  128 393 325  17 343 290 217 416 476 334 198  79  14  67]
 [118 101 118 323  60 245 232 198 139   2 169 290 154 304 482 120 390  29
  291  12 123 283 293  21 351 471 454 339 152 200 198  58 350  95  96 412
  229  83 311 119 232 406  37 493  68 308 333  60 427 245]
 [455  72 475 290 142   7 359  15  33 449 382 260 481 417 190 306 105 136
  280 196  73 126 102 456  58 116  38 210   4 161  52 432 454  41   2 229
  183  13 399 341 453 497 281 266  65  31 336 250 134 350]
 [118  37 420 172 250  18 163 176 187 444 346   7 159  14  14 421  79 104
  390 420 457 489 263 454 363 473 271 233 284 424 141 107 165 350 303 295
  282 489  43 416 210 321 463 109 119 329 365 123 370 216]
 [287 403 333  70 193  21  11  57  84 232 389 453  89 206 377 495 140  75
  392 195 459 357   2 158 500  73  46  59 189 254 280 431 475 295 218 487
  396 484  37 167 162 335 441  49 496 133 481 315 407 234]
 [325  21 188 237 400 168  32 168 268 345 468 304 210 462  71  15 421 307
  450 279 265  27 421 490  55 374 332 330 109 302 258 416 367 480 126 460
  287  79  34 332 158 318 391  26  33  36 332  39 408 110]]
----


+*In[47]:*+
[source, ipython3]
----
#Provides sum of columns#
x.sum(axis=0)
----


+*Out[47]:*+
----array([2341, 2451, 2769, 2503, 2467, 1601, 2543, 1220, 2365, 2812, 2580,
       2643, 2385, 2245, 2761, 2703, 2656, 1740, 2983, 2747, 3278, 2969,
       2025, 3100, 2877, 2287, 2749, 2117, 2006, 2527, 1996, 2493, 2857,
       2538, 2495, 2937, 2557, 2964, 2284, 2504, 2278, 3272, 2901, 2017,
       2708, 2151, 2880, 1610, 2555, 2367])----


+*In[48]:*+
[source, ipython3]
----
#Provides sum of rows#

x.sum(axis=1)
----


+*Out[48]:*+
----array([13201, 13009, 12584, 13629, 11842, 11024, 11203, 12866, 12922,
       12534])----


+*In[49]:*+
[source, ipython3]
----
#Provides sum#
x.sum()
----


+*Out[49]:*+
----124814----


+*In[50]:*+
[source, ipython3]
----
#Provides min#
x.min()
----


+*Out[50]:*+
----1----


+*In[51]:*+
[source, ipython3]
----
#Provides max#
x.max()
----


+*Out[51]:*+
----500----


+*In[52]:*+
[source, ipython3]
----
#Provides mean#
x.mean()
----


+*Out[52]:*+
----249.628----


+*In[53]:*+
[source, ipython3]
----
#Provides standard deviation#
x.std()
----


+*Out[53]:*+
----149.67430512950443----


+*In[54]:*+
[source, ipython3]
----
#Sorts overall by columns#
np.sort(x, axis=0)
----


+*Out[54]:*+
----array([[ 96,  21,  55,  54,  60,   7,  11,  15,  33,   2,  60,   7,  20,
         12,  14,  15,  79,  29,   1,  12,  73,  27,   2,  21,   8,   8,
         38,   3,   4,   2,  52,  36, 113,  17,   2,  58,  77,  13,  34,
         17,  82, 114,  37,  15,  33,  31,  35,  39,  14,  67],
       [118,  37,  82,  70, 122,  18,  32,  44,  84,  57,  76,  86,  89,
         14,  71, 101, 105,  75, 103, 195, 123, 114,  18, 158,  55,  41,
         46,  12,  56, 113,  88,  58, 161,  41,  16, 144,  93,  79,  37,
        119, 146, 242,  38,  17,  65,  36, 186,  60,  65, 105],
       [118,  72, 118,  70, 142,  21,  95,  45, 118, 227,  83, 159, 154,
         69, 190, 120, 140,  80, 179, 196, 221, 126,  34, 165,  58,  73,
        116,  59,  87, 161, 141,  90, 165,  41,  96, 167, 128,  83,  43,
        167, 158, 290, 217,  26,  68, 122, 198,  79, 134, 110],
       [118, 101, 188, 172, 193,  51, 163,  57, 139, 232, 169, 229, 159,
        183, 190, 126, 190,  84, 280, 237, 265, 283,  78, 262, 297, 108,
        271, 210, 109, 200, 177, 107, 167,  95, 126, 229, 183, 109, 136,
        186, 162, 318, 236,  49, 119, 133, 271, 123, 146, 216],
       [151, 194, 318, 237, 226, 131, 232,  60, 187, 250, 183, 260, 161,
        206, 254, 306, 255, 104, 291, 279, 358, 301, 102, 300, 350, 116,
        284, 233, 152, 254, 198, 200, 202, 295, 218, 295, 229, 383, 248,
        282, 173, 321, 281, 109, 296, 248, 332, 140, 253, 234],
       [287, 320, 324, 290, 250, 133, 359, 168, 253, 326, 346, 290, 210,
        275, 327, 328, 306, 136, 390, 314, 426, 357, 263, 332, 351, 231,
        332, 257, 189, 272, 257, 336, 350, 350, 303, 323, 282, 393, 301,
        319, 210, 335, 300, 233, 308, 268, 333, 175, 331, 245],
       [308, 396, 333, 323, 260, 168, 366, 176, 268, 345, 382, 304, 240,
        303, 373, 355, 384, 216, 392, 318, 446, 368, 293, 454, 363, 374,
        365, 279, 251, 301, 258, 387, 367, 351, 360, 362, 287, 448, 311,
        325, 232, 363, 391, 266, 421, 308, 336, 206, 370, 261],
       [325, 403, 420, 353, 360, 245, 393, 198, 340, 444, 389, 359, 396,
        304, 377, 421, 386, 231, 415, 366, 450, 413, 346, 456, 446, 392,
        376, 330, 284, 302, 260, 416, 403, 415, 445, 412, 396, 483, 325,
        332, 319, 386, 441, 393, 426, 329, 343, 223, 407, 317],
       [365, 409, 456, 439, 400, 344, 400, 222, 466, 449, 424, 453, 475,
        417, 482, 436, 390, 307, 450, 410, 457, 489, 421, 462, 449, 471,
        454, 339, 434, 424, 280, 431, 454, 453, 446, 460, 424, 484, 399,
        341, 343, 406, 463, 416, 476, 334, 365, 250, 408, 350],
       [455, 498, 475, 495, 454, 483, 492, 235, 477, 480, 468, 496, 481,
        462, 483, 495, 421, 478, 482, 420, 459, 491, 468, 490, 500, 473,
        467, 395, 440, 498, 285, 432, 475, 480, 483, 487, 458, 489, 450,
        416, 453, 497, 497, 493, 496, 342, 481, 315, 427, 462]])----


+*In[55]:*+
[source, ipython3]
----
#Sorts overall by rows#
np.sort(x, axis=1)
----


+*Out[55]:*+
----array([[  2,   3,   8,  15,  36,  41,  54,  58,  86, 126, 146, 161, 165,
        183, 223, 231, 235, 236, 240, 242, 251, 253, 255, 260, 271, 275,
        282, 296, 301, 301, 308, 318, 320, 324, 326, 342, 360, 360, 366,
        383, 415, 424, 426, 453, 462, 467, 468, 477, 483, 483],
       [ 17,  18,  35,  38,  45,  76,  77,  80,  90, 105, 114, 116, 118,
        118, 133, 140, 167, 183, 190, 231, 248, 248, 250, 257, 257, 260,
        301, 318, 319, 325, 331, 350, 353, 355, 358, 359, 386, 396, 396,
        400, 403, 410, 415, 426, 434, 445, 462, 482, 483, 491],
       [  1,  51,  56,  57,  65,  69,  78,  82,  83,  88,  93,  96, 122,
        122, 136, 144, 167, 173, 186, 190, 206, 216, 222, 229, 233, 253,
        261, 272, 314, 319, 327, 328, 332, 336, 351, 365, 368, 386, 392,
        393, 395, 409, 421, 439, 446, 446, 446, 448, 475, 497],
       [ 17,  20,  34,  60,  60,  70,  82,  84, 108, 109, 146, 151, 159,
        175, 179, 186, 194, 202, 221, 226, 254, 262, 268, 279, 285, 297,
        300, 303, 306, 308, 317, 323, 343, 344, 363, 366, 376, 387, 393,
        413, 436, 440, 450, 456, 458, 466, 480, 483, 492, 498],
       [  8,  12,  12,  14,  16,  17,  41,  44,  55,  67,  79,  87,  95,
        101, 103, 113, 113, 114, 128, 131, 161, 177, 198, 200, 217, 227,
        237, 284, 290, 300, 325, 334, 340, 343, 346, 362, 365, 373, 384,
        393, 416, 424, 449, 450, 454, 476, 478, 495, 496, 498],
       [  2,  12,  21,  29,  37,  58,  60,  60,  68,  83,  95,  96, 101,
        118, 118, 119, 120, 123, 139, 152, 154, 169, 198, 198, 200, 229,
        232, 232, 245, 245, 283, 290, 291, 293, 304, 308, 311, 323, 333,
        339, 350, 351, 390, 406, 412, 427, 454, 471, 482, 493],
       [  2,   4,   7,  13,  15,  31,  33,  38,  41,  52,  58,  65,  72,
         73, 102, 105, 116, 126, 134, 136, 142, 161, 183, 190, 196, 210,
        229, 250, 260, 266, 280, 281, 290, 306, 336, 341, 350, 359, 382,
        399, 417, 432, 449, 453, 454, 455, 456, 475, 481, 497],
       [  7,  14,  14,  18,  37,  43,  79, 104, 107, 109, 118, 119, 123,
        141, 159, 163, 165, 172, 176, 187, 210, 216, 233, 250, 263, 271,
        282, 284, 295, 303, 321, 329, 346, 350, 363, 365, 370, 390, 416,
        420, 420, 421, 424, 444, 454, 457, 463, 473, 489, 489],
       [  2,  11,  21,  37,  46,  49,  57,  59,  70,  73,  75,  84,  89,
        133, 140, 158, 162, 167, 189, 193, 195, 206, 218, 232, 234, 254,
        280, 287, 295, 315, 333, 335, 357, 377, 389, 392, 396, 403, 407,
        431, 441, 453, 459, 475, 481, 484, 487, 495, 496, 500],
       [ 15,  21,  26,  27,  32,  33,  34,  36,  39,  55,  71,  79, 109,
        110, 126, 158, 168, 168, 188, 210, 237, 258, 265, 268, 279, 287,
        302, 304, 307, 318, 325, 330, 332, 332, 332, 345, 367, 374, 391,
        400, 408, 416, 421, 421, 450, 460, 462, 468, 480, 490]])----


+*In[56]:*+
[source, ipython3]
----
#Sorts columns by 2#
sortedcol = x[x[:,1].argsort()]
sortedcol

----


+*Out[56]:*+
----array([[325,  21, 188, 237, 400, 168,  32, 168, 268, 345, 468, 304, 210,
        462,  71,  15, 421, 307, 450, 279, 265,  27, 421, 490,  55, 374,
        332, 330, 109, 302, 258, 416, 367, 480, 126, 460, 287,  79,  34,
        332, 158, 318, 391,  26,  33,  36, 332,  39, 408, 110],
       [118,  37, 420, 172, 250,  18, 163, 176, 187, 444, 346,   7, 159,
         14,  14, 421,  79, 104, 390, 420, 457, 489, 263, 454, 363, 473,
        271, 233, 284, 424, 141, 107, 165, 350, 303, 295, 282, 489,  43,
        416, 210, 321, 463, 109, 119, 329, 365, 123, 370, 216],
       [455,  72, 475, 290, 142,   7, 359,  15,  33, 449, 382, 260, 481,
        417, 190, 306, 105, 136, 280, 196,  73, 126, 102, 456,  58, 116,
         38, 210,   4, 161,  52, 432, 454,  41,   2, 229, 183,  13, 399,
        341, 453, 497, 281, 266,  65,  31, 336, 250, 134, 350],
       [118, 101, 118, 323,  60, 245, 232, 198, 139,   2, 169, 290, 154,
        304, 482, 120, 390,  29, 291,  12, 123, 283, 293,  21, 351, 471,
        454, 339, 152, 200, 198,  58, 350,  95,  96, 412, 229,  83, 311,
        119, 232, 406,  37, 493,  68, 308, 333,  60, 427, 245],
       [151, 194, 456,  70, 226, 344, 492,  60, 466, 480,  60, 159,  20,
        303, 254, 436, 306,  84, 179, 366, 221, 413,  34, 262, 297, 108,
        376, 279, 440, 498, 285, 387, 202,  17, 483, 323, 458, 109, 450,
        186,  82, 363, 300, 393, 308, 268, 343, 175, 146, 317],
       [308, 320, 324,  54, 360, 483, 366, 235, 477, 326, 183,  86, 240,
        275, 483, 126, 255, 231, 415, 318, 426, 301, 468, 165,   8,  41,
        467,   3, 251,   2, 260,  36, 161, 453, 360,  58, 424, 383, 301,
        282, 146, 242, 236,  15, 296, 342, 271, 223, 253, 462],
       [118, 396, 318, 353, 260, 133, 400,  45, 118, 250,  76, 359, 396,
        183, 190, 355, 386,  80, 482, 410, 358, 491,  18, 462, 350, 231,
        116, 257, 434, 301, 257,  90, 403, 415, 445, 167,  77, 483, 248,
        325, 319, 114,  38,  17, 426, 248,  35, 140, 331, 105],
       [287, 403, 333,  70, 193,  21,  11,  57,  84, 232, 389, 453,  89,
        206, 377, 495, 140,  75, 392, 195, 459, 357,   2, 158, 500,  73,
         46,  59, 189, 254, 280, 431, 475, 295, 218, 487, 396, 484,  37,
        167, 162, 335, 441,  49, 496, 133, 481, 315, 407, 234],
       [ 96, 409,  82, 439, 122,  51, 393, 222, 253,  57,  83, 229, 475,
         69, 327, 328, 190, 216,   1, 314, 446, 368,  78, 332, 446, 392,
        365, 395,  56, 272,  88, 336, 167, 351, 446, 144,  93, 448, 136,
        319, 173, 386, 497, 233, 421, 122, 186, 206,  65, 261],
       [365, 498,  55, 495, 454, 131,  95,  44, 340, 227, 424, 496, 161,
         12, 373, 101, 384, 478, 103, 237, 450, 114, 346, 300, 449,   8,
        284,  12,  87, 113, 177, 200, 113,  41,  16, 362, 128, 393, 325,
         17, 343, 290, 217, 416, 476, 334, 198,  79,  14,  67]])----


+*In[57]:*+
[source, ipython3]
----
#Sorts rows by 2#
sortedrow = x[:, x[1].argsort()]
sortedrow
----


+*Out[57]:*+
----array([[ 15, 468, 271, 236, 235, 183, 424, 231,  36, 462, 242, 467, 308,
        477, 483, 223,  58, 275, 483,  41, 301, 342, 326,   3, 260, 360,
          2, 324, 146, 282, 253,   8,  54, 126, 426,  86, 255, 320, 240,
        366, 161, 318, 453, 296, 251, 360, 165, 415, 383, 301],
       [ 17,  18,  35,  38,  45,  76,  77,  80,  90, 105, 114, 116, 118,
        118, 133, 140, 167, 183, 190, 231, 248, 248, 250, 257, 257, 260,
        301, 318, 319, 325, 331, 350, 353, 355, 358, 359, 386, 396, 396,
        400, 403, 410, 415, 426, 434, 445, 462, 482, 483, 491],
       [233,  78, 186, 497, 222,  83,  93, 216, 336, 261, 386, 365,  96,
        253,  51, 206, 144,  69, 327, 392, 136, 122,  57, 395,  88, 122,
        272,  82, 173, 319,  65, 446, 439, 328, 446, 229, 190, 409, 475,
        393, 167, 314, 351, 421,  56, 446, 332,   1, 448, 368],
       [393,  34, 343, 300,  60,  60, 458,  84, 387, 317, 363, 376, 151,
        466, 344, 175, 323, 303, 254, 108, 450, 268, 480, 279, 285, 226,
        498, 456,  82, 186, 146, 297,  70, 436, 221, 159, 306, 194,  20,
        492, 202, 366,  17, 308, 440, 483, 262, 179, 109, 413],
       [416, 346, 198, 217,  44, 424, 128, 478, 200,  67, 290, 284, 365,
        340, 131,  79, 362,  12, 373,   8, 325, 334, 227,  12, 177, 454,
        113,  55, 343,  17,  14, 449, 495, 101, 450, 496, 384, 498, 161,
         95, 113, 237,  41, 476,  87,  16, 300, 103, 393, 114],
       [493, 293, 333,  37, 198, 169, 229,  29,  58, 245, 406, 454, 118,
        139, 245,  60, 412, 304, 482, 471, 311, 308,   2, 339, 198,  60,
        200, 118, 232, 119, 427, 351, 323, 120, 123, 290, 390, 101, 154,
        232, 350,  12,  95,  68, 152,  96,  21, 291,  83, 283],
       [266, 102, 336, 281,  15, 382, 183, 136, 432, 350, 497,  38, 455,
         33,   7, 250, 229, 417, 190, 116, 399,  31, 449, 210,  52, 142,
        161, 475, 453, 341, 134,  58, 290, 306,  73, 260, 105,  72, 481,
        359, 454, 196,  41,  65,   4,   2, 456, 280,  13, 126],
       [109, 263, 365, 463, 176, 346, 282, 104, 107, 216, 321, 271, 118,
        187,  18, 123, 295,  14,  14, 473,  43, 329, 444, 233, 141, 250,
        424, 420, 210, 416, 370, 363, 172, 421, 457,   7,  79,  37, 159,
        163, 165, 420, 350, 119, 284, 303, 454, 390, 489, 489],
       [ 49,   2, 481, 441,  57, 389, 396,  75, 431, 234, 335,  46, 287,
         84,  21, 315, 487, 206, 377,  73,  37, 133, 232,  59, 280, 193,
        254, 333, 162, 167, 407, 500,  70, 495, 459, 453, 140, 403,  89,
         11, 475, 195, 295, 496, 189, 218, 158, 392, 484, 357],
       [ 26, 421, 332, 391, 168, 468, 287, 307, 416, 110, 318, 332, 325,
        268, 168,  39, 460, 462,  71, 374,  34,  36, 345, 330, 258, 400,
        302, 188, 158, 332, 408,  55, 237,  15, 265, 304, 421,  21, 210,
         32, 367, 279, 480,  33, 109, 126, 490, 450,  79,  27]])----


+*In[ ]:*+
[source, ipython3]
----

----


+*In[ ]:*+
[source, ipython3]
----

----
